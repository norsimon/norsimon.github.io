---
title: "Why is AI hard and Physics simple?"
tags: [deep learning]
category: papers
excerpt: '"...this paper is a preview of a new book and has the goal of finding a bottom-up formalism that allows (certain types of) physicists to understand DL by taking an /effective theory/ approach"'
---

<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
<!-- 2021-08-21 Sat 18:30 -->
<meta http-equiv="Content-Type" content="text/html;charset=utf-8" />
<meta name="viewport" content="width=device-width, initial-scale=1" />
<title>&lrm;</title>
<meta name="generator" content="Org mode" />
<meta name="author" content="Simon F. NÃ¸rrelykke" />
<style type="text/css">
 <!--/*--><![CDATA[/*><!--*/
  .title  { text-align: center;
             margin-bottom: .2em; }
  .subtitle { text-align: center;
              font-size: medium;
              font-weight: bold;
              margin-top:0; }
  .todo   { font-family: monospace; color: red; }
  .done   { font-family: monospace; color: green; }
  .priority { font-family: monospace; color: orange; }
  .tag    { background-color: #eee; font-family: monospace;
            padding: 2px; font-size: 80%; font-weight: normal; }
  .timestamp { color: #bebebe; }
  .timestamp-kwd { color: #5f9ea0; }
  .org-right  { margin-left: auto; margin-right: 0px;  text-align: right; }
  .org-left   { margin-left: 0px;  margin-right: auto; text-align: left; }
  .org-center { margin-left: auto; margin-right: auto; text-align: center; }
  .underline { text-decoration: underline; }
  #postamble p, #preamble p { font-size: 90%; margin: .2em; }
  p.verse { margin-left: 3%; }
  pre {
    border: 1px solid #ccc;
    box-shadow: 3px 3px 3px #eee;
    padding: 8pt;
    font-family: monospace;
    overflow: auto;
    margin: 1.2em;
  }
  pre.src {
    position: relative;
    overflow: auto;
    padding-top: 1.2em;
  }
  pre.src:before {
    display: none;
    position: absolute;
    background-color: white;
    top: -10px;
    right: 10px;
    padding: 3px;
    border: 1px solid black;
  }
  pre.src:hover:before { display: inline; margin-top: 14px;}
  /* Languages per Org manual */
  pre.src-asymptote:before { content: 'Asymptote'; }
  pre.src-awk:before { content: 'Awk'; }
  pre.src-C:before { content: 'C'; }
  /* pre.src-C++ doesn't work in CSS */
  pre.src-clojure:before { content: 'Clojure'; }
  pre.src-css:before { content: 'CSS'; }
  pre.src-D:before { content: 'D'; }
  pre.src-ditaa:before { content: 'ditaa'; }
  pre.src-dot:before { content: 'Graphviz'; }
  pre.src-calc:before { content: 'Emacs Calc'; }
  pre.src-emacs-lisp:before { content: 'Emacs Lisp'; }
  pre.src-fortran:before { content: 'Fortran'; }
  pre.src-gnuplot:before { content: 'gnuplot'; }
  pre.src-haskell:before { content: 'Haskell'; }
  pre.src-hledger:before { content: 'hledger'; }
  pre.src-java:before { content: 'Java'; }
  pre.src-js:before { content: 'Javascript'; }
  pre.src-latex:before { content: 'LaTeX'; }
  pre.src-ledger:before { content: 'Ledger'; }
  pre.src-lisp:before { content: 'Lisp'; }
  pre.src-lilypond:before { content: 'Lilypond'; }
  pre.src-lua:before { content: 'Lua'; }
  pre.src-matlab:before { content: 'MATLAB'; }
  pre.src-mscgen:before { content: 'Mscgen'; }
  pre.src-ocaml:before { content: 'Objective Caml'; }
  pre.src-octave:before { content: 'Octave'; }
  pre.src-org:before { content: 'Org mode'; }
  pre.src-oz:before { content: 'OZ'; }
  pre.src-plantuml:before { content: 'Plantuml'; }
  pre.src-processing:before { content: 'Processing.js'; }
  pre.src-python:before { content: 'Python'; }
  pre.src-R:before { content: 'R'; }
  pre.src-ruby:before { content: 'Ruby'; }
  pre.src-sass:before { content: 'Sass'; }
  pre.src-scheme:before { content: 'Scheme'; }
  pre.src-screen:before { content: 'Gnu Screen'; }
  pre.src-sed:before { content: 'Sed'; }
  pre.src-sh:before { content: 'shell'; }
  pre.src-sql:before { content: 'SQL'; }
  pre.src-sqlite:before { content: 'SQLite'; }
  /* additional languages in org.el's org-babel-load-languages alist */
  pre.src-forth:before { content: 'Forth'; }
  pre.src-io:before { content: 'IO'; }
  pre.src-J:before { content: 'J'; }
  pre.src-makefile:before { content: 'Makefile'; }
  pre.src-maxima:before { content: 'Maxima'; }
  pre.src-perl:before { content: 'Perl'; }
  pre.src-picolisp:before { content: 'Pico Lisp'; }
  pre.src-scala:before { content: 'Scala'; }
  pre.src-shell:before { content: 'Shell Script'; }
  pre.src-ebnf2ps:before { content: 'ebfn2ps'; }
  /* additional language identifiers per "defun org-babel-execute"
       in ob-*.el */
  pre.src-cpp:before  { content: 'C++'; }
  pre.src-abc:before  { content: 'ABC'; }
  pre.src-coq:before  { content: 'Coq'; }
  pre.src-groovy:before  { content: 'Groovy'; }
  /* additional language identifiers from org-babel-shell-names in
     ob-shell.el: ob-shell is the only babel language using a lambda to put
     the execution function name together. */
  pre.src-bash:before  { content: 'bash'; }
  pre.src-csh:before  { content: 'csh'; }
  pre.src-ash:before  { content: 'ash'; }
  pre.src-dash:before  { content: 'dash'; }
  pre.src-ksh:before  { content: 'ksh'; }
  pre.src-mksh:before  { content: 'mksh'; }
  pre.src-posh:before  { content: 'posh'; }
  /* Additional Emacs modes also supported by the LaTeX listings package */
  pre.src-ada:before { content: 'Ada'; }
  pre.src-asm:before { content: 'Assembler'; }
  pre.src-caml:before { content: 'Caml'; }
  pre.src-delphi:before { content: 'Delphi'; }
  pre.src-html:before { content: 'HTML'; }
  pre.src-idl:before { content: 'IDL'; }
  pre.src-mercury:before { content: 'Mercury'; }
  pre.src-metapost:before { content: 'MetaPost'; }
  pre.src-modula-2:before { content: 'Modula-2'; }
  pre.src-pascal:before { content: 'Pascal'; }
  pre.src-ps:before { content: 'PostScript'; }
  pre.src-prolog:before { content: 'Prolog'; }
  pre.src-simula:before { content: 'Simula'; }
  pre.src-tcl:before { content: 'tcl'; }
  pre.src-tex:before { content: 'TeX'; }
  pre.src-plain-tex:before { content: 'Plain TeX'; }
  pre.src-verilog:before { content: 'Verilog'; }
  pre.src-vhdl:before { content: 'VHDL'; }
  pre.src-xml:before { content: 'XML'; }
  pre.src-nxml:before { content: 'XML'; }
  /* add a generic configuration mode; LaTeX export needs an additional
     (add-to-list 'org-latex-listings-langs '(conf " ")) in .emacs */
  pre.src-conf:before { content: 'Configuration File'; }

  table { border-collapse:collapse; }
  caption.t-above { caption-side: top; }
  caption.t-bottom { caption-side: bottom; }
  td, th { vertical-align:top;  }
  th.org-right  { text-align: center;  }
  th.org-left   { text-align: center;   }
  th.org-center { text-align: center; }
  td.org-right  { text-align: right;  }
  td.org-left   { text-align: left;   }
  td.org-center { text-align: center; }
  dt { font-weight: bold; }
  .footpara { display: inline; }
  .footdef  { margin-bottom: 1em; }
  .figure { padding: 1em; }
  .figure p { text-align: center; }
  .equation-container {
    display: table;
    text-align: center;
    width: 100%;
  }
  .equation {
    vertical-align: middle;
  }
  .equation-label {
    display: table-cell;
    text-align: right;
    vertical-align: middle;
  }
  .inlinetask {
    padding: 10px;
    border: 2px solid gray;
    margin: 10px;
    background: #ffffcc;
  }
  #org-div-home-and-up
   { text-align: right; font-size: 70%; white-space: nowrap; }
  textarea { overflow-x: auto; }
  .linenr { font-size: smaller }
  .code-highlighted { background-color: #ffff00; }
  .org-info-js_info-navigation { border-style: none; }
  #org-info-js_console-label
    { font-size: 10px; font-weight: bold; white-space: nowrap; }
  .org-info-js_search-highlight
    { background-color: #ffff00; color: #000000; font-weight: bold; }
  .org-svg { width: 90%; }
  /*]]>*/-->
</style>
<script type="text/javascript">
// @license magnet:?xt=urn:btih:1f739d935676111cfff4b4693e3816e664797050&amp;dn=gpl-3.0.txt GPL-v3-or-Later
<!--/*--><![CDATA[/*><!--*/
     function CodeHighlightOn(elem, id)
     {
       var target = document.getElementById(id);
       if(null != target) {
         elem.classList.add("code-highlighted");
         target.classList.add("code-highlighted");
       }
     }
     function CodeHighlightOff(elem, id)
     {
       var target = document.getElementById(id);
       if(null != target) {
         elem.classList.remove("code-highlighted");
         target.classList.remove("code-highlighted");
       }
     }
    /*]]>*///-->
// @license-end
</script>
<script type="text/x-mathjax-config">
    MathJax.Hub.Config({
        displayAlign: "center",
        displayIndent: "0em",

        "HTML-CSS": { scale: 100,
                        linebreaks: { automatic: "false" },
                        webFont: "TeX"
                       },
        SVG: {scale: 100,
              linebreaks: { automatic: "false" },
              font: "TeX"},
        NativeMML: {scale: 100},
        TeX: { equationNumbers: {autoNumber: "AMS"},
               MultLineWidth: "85%",
               TagSide: "right",
               TagIndent: ".8em"
             }
});
</script>
<script type="text/javascript"
        src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js?config=TeX-AMS_HTML"></script>
</head>
<body>
<div id="content">
<ul class="org-ul">
<li>Notes from reading the 2021 paper
<ul class="org-ul">
<li>Title: Why is AI hard and Physics simple?</li>
<li>Author: Daniel A. Roberts</li>
<li>Published: online <span class="timestamp-wrapper"><span class="timestamp">[2021-03-31 Wed]</span></span>
<ul class="org-ul">
<li><a href="https://export.arxiv.org/abs/2104.00008v1">https://export.arxiv.org/abs/2104.00008v1</a></li>
</ul></li>
</ul></li>
<li>This 29 page preprint serves as an appetizer to the 449 page book "<a href="https://deeplearningtheory.com/PDLT.pdf">Principles of Deep Learning Theory</a>" that came out as pdf in June 2021</li>
<li>Understanding how AI works is inextricably entangled with understanding how the human mind works&#x2014;how we perceive and think</li>
<li><b>Sparsity</b> is introduced as a key principle in physics: The number of parameters needed to define a model should be far less than the number of experiments that the theory describes</li>
<li><b>Spatial locality</b> is another important principle in physics&#x2014;only neighbors can interact, and in some sense the concept of neighbor and space as such is defined precisely through the spatial locality of interactions</li>
<li>Cognitive scientists take a top-down approach to ML by trying to understand it through human learning</li>
<li>Physics tends to operate in a bottom-up approach and this may also be useful in modeling ML, even if applying it to understanding humans will lead nowhere</li>
<li>Compared to quantum field theory, DL is a classical statistical theory  and not quantum, also its statistical variables are not forming a field&#x2014;nevertheless, both are/can be approached as <b>effective theories</b>, i.e. they describe  observations without making claims about modeling the actual causes of observed effects</li>
<li>Knowing the architecture and value of all weights and biases does not give us any useful insight into how the function (the network) would operate on some input
<ul class="org-ul">
<li>Given all the parameters and some input \(x\), the easiest way to say something about \(f(x)\) would be to run \(x\) through the network</li>
</ul></li>
<li>In the infinite-width limit (thermodynamic limit or large-\(N\) limit), but keeping the depth \(L\) fixed
<ul class="org-ul">
<li>All neural interactions turn off</li>
<li>All neural distributions converge on multivariate Gaussians</li>
<li>Correlations are completely determined by the pairwise covariance matrix (likely that same statement as distributions being Gaussians, given that all moments higher than the second vanish for these)</li>
<li>Intermediate representations are fixed from the start and thus independent of training data</li>
<li>The network behaves as if it isn't deep and it also doesn't learn</li>
<li>The limit is too simple!</li>
</ul></li>
<li>Taking another page out of the book of theoretical physics, we take a look at <b>perturbation theory</b>
<ul class="org-ul">
<li>We either have an infinitesimally small, dimensionless, parameter \(\epsilon\) or we turn an infinitely big one \(N\), into a small one by defining \(\epsilon=1/N\) and Taylor expanding in that (this is called an \(1/N\) expansion)</li>
</ul></li>
<li>The first correction to the infinite \(N\) limit that we now expand around is \(O(1/N)\) and introduces correlations between collections of four neurons
<ul class="org-ul">
<li>The, now finite width, output distributions are no longer multivariate Gaussians but have higher order moments</li>
<li>Further corrections, in higher orders of \(1/N\) also leads to longer-range correlations</li>
<li>These perturbative models span the spectrum from sparse to complex</li>
</ul></li>
<li>The final tool introduced from physics is <b>renormalization group flow</b> as Ken Wilson introduced it in 1971
<ul class="org-ul">
<li>The "flow" is generated by repeated marginalizations (coarse-graining/down-sampling) of the system, resulting in an effective theory of coarse-grained observables</li>
<li>Interactions that grow with the flow are called <i>relevant</i>, those that decrease in strength are called <i>irrelevant</i></li>
<li>Renaming the DL version <b>representation group flow</b> and applying it to the lowest order expansion in \(1/N\) reveals that the lowest order corrections scale linearly with \(L\)</li>
<li>The proper perturbative parameter for the toy models is thus the aspect ratio \(L/N\) of depth to width of the network</li>
</ul></li>
<li>The scales \(L\) and \(N\) are supposedly responsible for the wide range of hyperparameters encountered in the wild (see their book)</li>
<li>Most networks will show exponential growth or decay of signals as we iterate over (train) the weights 
<ul class="org-ul">
<li>Only networks whose initial distribution of weights and biases are carefully tuned to a <b>critical point</b>  will not have exponential decay or growth but reach <b>criticality</b> and show self-similar behavior</li>
</ul></li>
<li>At the critical point we should expect system-wide fluctuations (actually, typically a power-law distribution of fluctuations, so all sizes are possible)
<ul class="org-ul">
<li>Fluctuations happen as a function of different instantiations, i.e. different realizations of initial conditions can lead to very different results</li>
<li>Analysis shows that these fluctuations scale with the emergent cutoff of \(~L/N\)</li>
<li>We therefore want \(L/N < 1\) to suppress fluctuations</li>
<li>But, we also want \(L/N > 0\) to get any learning at all (recall the first naive thermodynamic limit in \(N\))</li>
</ul></li>
<li>In summary, this paper is a preview of a new book and has the goal of finding a bottom-up formalism that allows (certain types of) physicists to understand DL by taking an <i>effective theory</i> approach
<ul class="org-ul">
<li>Apart from a deeper understanding of DL and the joy of encountering old friends from theoretical physics, the perturbative analysis also promises some practical advantages in guiding the practitioner in their choice of architecture, initial conditions, and hyperparameters&#x2014;hopefully the book will contain more concrete information on this point</li>
<li>Also, this interpretation explains how over-parameterized (more tunable parameters than training data) networks are "secretly" quite simple and sparse in their <i>data-dependent coupling</i> description</li>
</ul></li>
</ul>
</div>
<div id="postamble" class="status">
<p class="author">Author: Simon F. NÃ¸rrelykke</p>
<p class="date">Created: 2021-08-21 Sat 18:30</p>
<p class="validation"><a href="https://validator.w3.org/check?uri=referer">Validate</a></p>
</div>
</body>
</html>
